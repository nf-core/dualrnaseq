{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/dualrnaseq/master/nextflow_schema.json",
    "title": "nf-core/dualrnaseq pipeline parameters",
    "description": "Dual RNA-seq pipeline",
    "type": "object",
    "definitions": {
        "pipeline_basics": {
            "title": "Pipeline - basics",
            "type": "object",
            "description": "Primary parameters for runtime",
            "default": "",
            "properties": {
                "input": {
                    "type": "string",
                    "default": "data/*{1,2}.fastq.gz",
                    "fa_icon": "fas fa-dna",
                    "description": "Input files can be read as either .fastq or .fastq.gz. They should be named descriptively without spaces and special characters (such as : and @), with the corresponding replicate (if any) appended at the end. The best practise for this pipeline is to use underscores to separate different experimental conditions.",
                    "help_text": "Use this to specify the location of your input FastQ files. For example:\n\n`--input 'path/to/data/sample_*_{1,2}.fastq'`\n\nPlease note the following requirements:\n\n1. The path must be enclosed in quotes\n2. The path must have at least one `*` wildcard character\n3. When using the pipeline with paired end data, the path must use `{1,2}` notation to specify read pairs.\n4. If left unspecified, a default pattern is used: `data/*{1,2}.fastq.gz`\n\nNote: by default, the pipeline expects paired-end data. If you have single-end data, you need to specify `--single_end` on the command line when launched. For example: `--single_end --input '*.fastq'`"
                },
                "single_end": {
                    "type": "boolean",
                    "description": "Specifies that the input is single-end reads.",
                    "fa_icon": "fas fa-align-center",
                    "help_text": "By default, the pipeline expects paired-end data. If you have single-end data, you need to specify `--single_end` on the command line when you launch the pipeline. A normal glob pattern, enclosed in quotation marks, can then be used for `--input`. For example:\n\n```bash\n--single_end --input '*.fastq'\n```\n\nIt is not possible to run a mixture of single-end and paired-end files in one run."
                },
                "outdir": {
                    "type": "string",
                    "description": "The output directory where the results will be saved.",
                    "default": "./results",
                    "fa_icon": "fas fa-folder-open"
                }
            },
            "required": [
                "input"
            ],
            "fa_icon": "fas fa-keyboard"
        },
        "pipeline_resources": {
            "title": "Pipeline resources",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested    for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "genome_references_and_annotation": {
            "title": "Genome references and annotation",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "properties": {
                "fasta_host": {
                    "type": "string",
                    "description": "Host fasta file",
                    "fa_icon": "far fa-file"
                },
                "fasta_pathogen": {
                    "type": "string",
                    "description": "Pathogen fasta file",
                    "fa_icon": "fas fa-file"
                },
                "gff_host_genome": {
                    "type": "string",
                    "description": "Host GFF file",
                    "fa_icon": "far fa-file"
                },
                "gff_host_tRNA": {
                    "type": "string",
                    "description": "Host GFF file for tRNAs (optional)",
                    "fa_icon": "far fa-file"
                },
                "gff_pathogen": {
                    "type": "string",
                    "description": "Pathogen GFF",
                    "fa_icon": "fas fa-file"
                },
                "transcriptome_host": {
                    "type": "string",
                    "description": "Host transcriptome file",
                    "fa_icon": "far fa-file-alt"
                },
                "transcriptome_pathogen": {
                    "type": "string",
                    "description": "Pathogen transcriptome file",
                    "fa_icon": "fas fa-file-alt"
                },
                "genome_host": {
                    "type": "string",
                    "description": "Key for the host genome in iGenomes / your custom genomes config file",
                    "fa_icon": "far fa-file",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required host reference genome files e.g. `--genome_host GRCh38`.\n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "genome_pathogen": {
                    "type": "string",
                    "description": "Key for the pathogen genome in iGenomes / your custom genomes config file",
                    "fa_icon": "fas fa-file",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required pathogen reference genome files e.g. `--genome_pathogen SL1344`.\n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "igenomes_base": {
                    "type": "string",
                    "description": "Directory / URL base for iGenomes references.",
                    "default": "s3://ngi-igenomes/igenomes",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                }
            },
            "description": "If used, the path to the files should be enclosed by quotes \"../..\""
        },
        "fastqc": {
            "title": "FastQC",
            "type": "object",
            "description": "By default, the pipeline utilizes FastQC tool for quality control of raw sequencing reads",
            "default": "",
            "properties": {
                "skip_fastqc": {
                    "type": "boolean",
                    "description": "An option to not run FastQC. (Default: False)  This is set to False within the configuration files, but only needs to be passed on the command line to become True.",
                    "fa_icon": "fas fa-forward"
                },
                "fastqc_params": {
                    "type": "string",
                    "description": "Define a set of additional fastqc parameters you wish to use, except --quiet --threads --noextract flags which are already specified in the dualrnaseq pipeline",
                    "fa_icon": "fas fa-ellipsis-h"
                }
            },
            "fa_icon": "fas fa-chart-bar"
        },
        "cutadapt": {
            "title": "Cutadapt",
            "type": "object",
            "description": "Adapter and read trimming is performed by either Cutadapt or BBDuk with the following related options",
            "default": "",
            "properties": {
                "run_cutadapt": {
                    "type": "boolean",
                    "description": "To run Cutadapt",
                    "fa_icon": "fas fa-running"
                },
                "a": {
                    "type": "string",
                    "default": "AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",
                    "description": "Adaptor for For single-end reads as well as the first reads of paired-end data",
                    "fa_icon": "fas fa-sliders-h"
                },
                "A": {
                    "type": "string",
                    "default": "AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT",
                    "description": "For paired-end data, the adapter sequence for the second reads can be defined here",
                    "fa_icon": "fas fa-sliders-h"
                },
                "quality_cutoff": {
                    "type": "integer",
                    "default": 10,
                    "description": "Cutadapt can also remove low-quality read ends. By default, the 3\\u2019 end of each read is trimmed using a cutoff of 10. If you specify two comma-separated cutoffs, the first value represents the 5' cutoff, and the second one the 3' cutoff",
                    "fa_icon": "fas fa-sliders-h"
                },
                "cutadapt_params": {
                    "type": "string",
                    "description": "Additional parameters if needed",
                    "fa_icon": "fas fa-ellipsis-h",
                    "help_text": "Define a set of additional Cutadapt parameters you wish to use, except -m and -j which are already specified in the dualrnaseq pipeline."
                }
            },
            "fa_icon": "fas fa-cut",
            "help_text": "Cutadapt requires prior knowledge of the adaptors used during library preparation.\nBy default, the pipeline trims Illumina TruSeq adapters"
        },
        "bbduk": {
            "title": "BBDuk",
            "type": "object",
            "description": "Adapter and read trimming is performed by either Cutadapt or BBDuk with the following related options",
            "default": "",
            "properties": {
                "run_bbduk": {
                    "type": "boolean",
                    "description": "To run BBDuk",
                    "fa_icon": "fas fa-running"
                },
                "minlen": {
                    "type": "integer",
                    "default": 18,
                    "description": "Reads shorter than this after trimming will be discarded",
                    "fa_icon": "fas fa-sliders-h"
                },
                "qtrim": {
                    "type": "string",
                    "default": "r",
                    "description": "To trim read ends to remove bases with quality below trimq",
                    "fa_icon": "fas fa-sliders-h"
                },
                "trimq": {
                    "type": "integer",
                    "default": 10,
                    "description": "Cutoff to trim regions with average quality BELOW given value",
                    "fa_icon": "fas fa-sliders-h"
                },
                "ktrim": {
                    "type": "string",
                    "default": "r",
                    "description": "To trim reads to remove bases matching reference kmers. Avaiable options: f (don't trim), r (trim to the right - 3' adapters) l (trim to the left - 5' adapters)",
                    "fa_icon": "fas fa-sliders-h"
                },
                "k": {
                    "type": "integer",
                    "default": 17,
                    "description": "Kmer length used for finding contaminants (adapters). Contaminants shorter than k will not be found. k must be at least 1",
                    "fa_icon": "fas fa-sliders-h"
                },
                "mink": {
                    "type": "integer",
                    "default": 11,
                    "description": "Look for shorter kmers at read tips down to this length when k-trimming or masking. 0 means disabled.  Enabling this will disable maskmiddle",
                    "fa_icon": "fas fa-sliders-h"
                },
                "hdist": {
                    "type": "integer",
                    "default": 1,
                    "description": "Maximum Hamming distance for ref kmers (subs only)",
                    "fa_icon": "fas fa-sliders-h"
                },
                "adapters": {
                    "type": "string",
                    "default": "data/adapters.fa",
                    "description": "Fasta file with adapter sequences (Default: $baseDir/data/adapters.fa)",
                    "fa_icon": "far fa-file-alt"
                },
                "bbduk_params": {
                    "type": "string",
                    "description": "Set of additional BBDuk parameters",
                    "fa_icon": "fas fa-ellipsis-h",
                    "help_text": "Define a set of additional BBDuk parameters you wish to use, except `-Xmx1g` which is already specified in the dualrnaseq pipeline.\n\n"
                }
            },
            "fa_icon": "fas fa-cut",
            "help_text": "BBDuk does not require any prior knowledge about adapter types, searching for common adapter sequences from the file `$baseDir/data/adapters.fa`"
        },
        "salmon_general": {
            "title": "Salmon - general",
            "type": "object",
            "description": "These parameters are available for Salmon in both Selective Alignment and alignment-based mode",
            "default": "",
            "properties": {
                "libtype": {
                    "type": "string",
                    "description": "Options for setting the library type. A = automatic detection",
                    "fa_icon": "fas fa-sliders-h"
                },
                "incompatPrior": {
                    "type": "integer",
                    "description": "By default, this is set to 0.0, to ensure that only mappings or alignments that are compatible with the specified library type are considered by Salmon",
                    "fa_icon": "fas fa-sliders-h"
                },
                "generate_salmon_uniq_ambig": {
                    "type": "boolean",
                    "description": "Option to extract all of the unique and ambiguous reads after quantification",
                    "help_text": "This is useful to analyse reads which multimap across or within genomes. This option merges the `quant.sf` file with the `aux_info/ambig_info.tsv` file, combining columns which show how the underlying reads were processed and assigned. If a read maps uniquely to a feature, then the read will be added to UniqueCount column. If the read maps to more than one location, it will be summed against each of the features and shown in the AmbigCount column. The underlying statistical model of Salmon is able to assign many of these multimapping reads to a specific feature and hence will appear in the NumReads column. The output file is located under the `aux_info` folder.\n\nWorks for both Selective alignment and alignment-based modes (Default: False).",
                    "fa_icon": "fas fa-sliders-h"
                },
                "gene_feature_gff_to_create_transcriptome_host": {
                    "type": "string",
                    "default": "exon,tRNA",
                    "description": "The pipeline uses gene features from the 3rd column of the host annotative file (gff3) to extract the coordinates of transcripts to be quantified.  By default, the pipeline uses features `exon` from the `--gff_host` file and `tRNA` from the `--gff_host_tRNA` file. Should be a comma-separated string.",
                    "fa_icon": "fas fa-sliders-h"
                },
                "gene_feature_gff_to_create_transcriptome_pathogen": {
                    "type": "string",
                    "default": "gene,sRNA,tRNA,rRNA",
                    "description": "The pipeline uses gene features from the 3rd column of the pathogen annotative fikle (gff3) to extract the coordinates of transcripts to be quantified.  By default, the pipeline uses features as `gene`, `sRNA`, `tRNA` and `rRNA` from the `--gff_pathogen` file. Should be a comma-separated string.",
                    "fa_icon": "fas fa-sliders-h"
                },
                "gene_attribute_gff_to_create_transcriptome_host": {
                    "type": "string",
                    "default": "transcript_id",
                    "description": "This flag defines the gene attribute from the 9th column of the host annotative (gff3) file, where the transcript names are extracted.  By default, the pipeline extracts transcript_id from the --gff_host file",
                    "fa_icon": "fas fa-sliders-h"
                },
                "gene_attribute_gff_to_create_transcriptome_pathogen": {
                    "type": "string",
                    "default": "locus_tag",
                    "description": "This flag defines the gene attribute from the 9th column of the pathogen annotative (gff3) file, where transcript, genes or CDS regions are extracted.  By default, the pipeline extracts locus_tag from the --gff_pathogen file",
                    "fa_icon": "fas fa-sliders-h"
                }
            },
            "fa_icon": "fas fa-fish"
        },
        "salmon_selective_alignment": {
            "title": "Salmon - Selective alignment",
            "type": "object",
            "description": "Parameters listed below are available only for Salmon with Selective Alignment.",
            "default": "",
            "properties": {
                "run_salmon_selective_alignment": {
                    "type": "boolean",
                    "description": "Run Salmon selective alignment",
                    "fa_icon": "fas fa-running"
                },
                "kmer_length": {
                    "type": "integer",
                    "default": 21,
                    "description": "To define the k-mer length (-k parameter in Salmon)",
                    "fa_icon": "fas fa-sliders-h"
                },
                "writeUnmappedNames": {
                    "type": "boolean",
                    "description": "By default the pipeline saves names of unmapped reads",
                    "fa_icon": "fas fa-sliders-h"
                },
                "softclipOverhangs": {
                    "type": "boolean",
                    "description": "By default, the pipeline allows soft-clipping of reads",
                    "help_text": "\"Soft-clipping allows reads that overhang the beginning or ends of the transcript. In this case, the overhanging section of the read will simply be unaligned, and will not contribute or detract from the alignment score\". If it is set to False, the end-to-end alignment of the entire read is forced, so that the occurrence of any overhangings may affect the alignment score",
                    "fa_icon": "fas fa-sliders-h"
                },
                "dumpEq": {
                    "type": "boolean",
                    "description": "o save the equivalence classes and their counts",
                    "fa_icon": "fas fa-sliders-h"
                },
                "writeMappings": {
                    "type": "boolean",
                    "description": "set to True, the pipeline will create a mapping.sam file containing mapping information",
                    "fa_icon": "fas fa-sliders-h"
                },
                "keepDuplicates": {
                    "type": "boolean",
                    "description": "By default salmon removes/collapses identical transcripts during the indexing stage",
                    "help_text": "The list of both restored and removed transcripts will be saved in the `duplicate_clusters.tsv` file of the `transcripts_index` folder. If you want to obtain quantification results for all duplicates, please specify this option `--keepDuplicates`",
                    "fa_icon": "fas fa-sliders-h"
                },
                "salmon_sa_params_index": {
                    "type": "string",
                    "description": "Set of additional parameters for creating an index with Salmon Selective Alignment",
                    "fa_icon": "fas fa-ellipsis-h"
                },
                "salmon_sa_params_mapping": {
                    "type": "string",
                    "description": "Set of additional parameters for mapping with Salmon Selective Alignment",
                    "fa_icon": "fas fa-ellipsis-h"
                }
            },
            "fa_icon": "fas fa-fish"
        },
        "salmon_alignment_based_mode": {
            "title": "Salmon - Alignment based mode",
            "type": "object",
            "description": "Options for Alignment-based mode",
            "default": "",
            "properties": {
                "run_salmon_alignment_based_mode": {
                    "type": "boolean",
                    "description": "To run Salmon alignment-based mode",
                    "fa_icon": "fas fa-running"
                },
                "salmon_alignment_based_params": {
                    "type": "string",
                    "description": "Define a set of additional salmon quant parameters you wish to use in salmon alignment-based mode.",
                    "fa_icon": "fas fa-ellipsis-h"
                }
            },
            "fa_icon": "fas fa-fish"
        },
        "star_general": {
            "title": "STAR - general",
            "type": "object",
            "description": "These parameters are available for STAR in both quantification modes, using HTSeq and Salmon in alignment-based mode",
            "default": "",
            "properties": {
                "run_star": {
                    "type": "boolean",
                    "description": "To run STAR",
                    "fa_icon": "fas fa-running"
                },
                "outSAMunmapped": {
                    "type": "string",
                    "default": "Within",
                    "description": "By default, the pipeline saves unmapped reads within the main BAM file. If you want to switch off this option, set the --outSAMunmapped flag to None",
                    "help_text": "For paired-end reads, the KeepPairs parameter will record the unmapped mates for each alignment, and will keep it adjacent to its mapped read (only affects multi-mapping reads).",
                    "fa_icon": "fas fa-sliders-h"
                },
                "outSAMattributes": {
                    "type": "string",
                    "default": "Standard",
                    "description": "o specify the attributes of the output BAM file. The default value is Standard, but there are a range of options if needed",
                    "help_text": "By default, the pipeline uses the Standard option to keep NH HI AS nM SAM attributes",
                    "fa_icon": "fas fa-sliders-h"
                },
                "outFilterMultimapNmax": {
                    "type": "integer",
                    "default": 999,
                    "description": "To specify the maximum number of loci a read is allowed to map to",
                    "fa_icon": "fas fa-sliders-h"
                },
                "outFilterType": {
                    "type": "string",
                    "default": "BySJout",
                    "description": "By default, the pipeline keeps reads containing junctions that passed filtering into the file SJ.out.tab. This option reduces the number of \u201dspurious\u201d junctions",
                    "fa_icon": "fas fa-sliders-h"
                },
                "alignSJoverhangMin": {
                    "type": "integer",
                    "default": 8,
                    "description": "The number of minimum overhang for unannotated junctions can be changed here",
                    "fa_icon": "fas fa-sliders-h"
                },
                "alignSJDBoverhangMin": {
                    "type": "integer",
                    "default": 1,
                    "description": "The number of minimum overhang for annotated junctions can be changed here",
                    "fa_icon": "fas fa-sliders-h"
                },
                "outFilterMismatchNmax": {
                    "type": "integer",
                    "default": 999,
                    "description": "To define a threshold for the number of mismatches to be allowed. By default, the pipeline uses a large number 999 to switch this filter off.",
                    "fa_icon": "fas fa-sliders-h"
                },
                "outFilterMismatchNoverReadLmax": {
                    "type": "integer",
                    "default": 1,
                    "description": "Here, you can define a threshold for a ratio of mismatches to read length. The alignment will be considered if the ratio is less than or equal to this value",
                    "fa_icon": "fas fa-sliders-h"
                },
                "alignIntronMin": {
                    "type": "integer",
                    "default": 20,
                    "description": "By default, the nf-core dualrnaseq pipeline uses 20 as a minimum intron length. If the genomic gap is smaller than this value, it is considered as a deletion",
                    "fa_icon": "fas fa-sliders-h"
                },
                "alignIntronMax": {
                    "type": "integer",
                    "default": 1000000,
                    "description": "The maximum intron length is set to 1,000,000",
                    "fa_icon": "fas fa-sliders-h"
                },
                "alignMatesGapMax": {
                    "type": "integer",
                    "default": 1000000,
                    "description": "The maximum genomic distance between mates is 1,000,000",
                    "fa_icon": "fas fa-sliders-h"
                },
                "limitBAMsortRAM": {
                    "type": "integer",
                    "description": "Option to limit RAM when sorting BAM file. If 0, will be set to the genome index size, which can be quite large when running on a desktop or laptop",
                    "default": "0",
                    "fa_icon": "fas fa-sliders-h"
                },
                "winAnchorMultimapNmax": {
                    "type": "integer",
                    "default": 999,
                    "description": "The maximum number of loci anchors that are allowed to map. By default, the pipeline uses a large number 999 to switch this filter off.",
                    "fa_icon": "fas fa-sliders-h"
                },
                "sjdbOverhang": {
                    "type": "integer",
                    "default": 100,
                    "description": "Option to specify the length of the donor/acceptor sequence on each side of the junctions used in constructing the splice junctions database. By default the option is set to 100. However, we recommend setting a value depending on the read length: read/mate length - 1.",
                    "fa_icon": "fas fa-sliders-h"
                }
            },
            "fa_icon": "fas fa-star"
        },
        "star_salmon_alignment_based_mode": {
            "title": "STAR - Salmon - alignment-based mode",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "quantTranscriptomeBan": {
                    "type": "string",
                    "default": "Singleend",
                    "description": "The nf-core/dualrnaseq pipeline runs STAR to generate transcriptomic alignments. By default, it allows for insertions, deletions and soft-clips (Singleend option). To prohibit this behaviour, please specify IndelSoftclipSingleend",
                    "fa_icon": "fas fa-sliders-h"
                },
                "star_salmon_index_params": {
                    "type": "string",
                    "description": "Define additional parameters for creating an index with STAR in salmon",
                    "fa_icon": "fas fa-ellipsis-h"
                },
                "star_salmon_alignment_params": {
                    "type": "string",
                    "description": "Define additional parameters for alignment with STAR in salmon alignment-based mode",
                    "fa_icon": "fas fa-ellipsis-h"
                }
            },
            "fa_icon": "fas fa-star"
        },
        "star_htseq": {
            "title": "STAR - HTseq",
            "type": "object",
            "description": "Parameters available for STAR - HTSeq",
            "default": "",
            "properties": {
                "outWigType": {
                    "type": "string",
                    "default": "None",
                    "description": "Used to generate signal outputs, such as \"wiggle\" and \"bedGraph\".",
                    "fa_icon": "fas fa-sliders-h"
                },
                "outWigStrand": {
                    "type": "string",
                    "default": "Stranded",
                    "description": "Options are Stranded or Unstranded when defining the strandedness of wiggle/bedGraph output",
                    "fa_icon": "fas fa-sliders-h"
                },
                "star_index_params": {
                    "type": "string",
                    "description": "Set of additional parameters for creating an index with STAR",
                    "fa_icon": "fas fa-ellipsis-h"
                },
                "star_alignment_params": {
                    "type": "string",
                    "description": "Set of additional parameters for alignment with STAR",
                    "fa_icon": "fas fa-ellipsis-h"
                }
            },
            "fa_icon": "fas fa-star"
        },
        "htseq_general": {
            "title": "HTSeq - general",
            "type": "object",
            "default": "",
            "properties": {
                "run_htseq_uniquely_mapped": {
                    "type": "boolean",
                    "description": "Used to run HTSeq-count and extract uniquely mapped reads from both the host and pathogen",
                    "fa_icon": "fas fa-running"
                },
                "stranded": {
                    "type": "string",
                    "default": "yes",
                    "description": "A parameter for the library type. Options include \"yes\", \"no\" or \"reverse\"",
                    "fa_icon": "fas fa-sliders-h"
                },
                "max_reads_in_buffer": {
                    "type": "integer",
                    "default": 30000000,
                    "description": "Option to define the number of maximum reads allowed to stay in memory until the mates are found. Has an effect for paired-end reads",
                    "fa_icon": "fas fa-sliders-h"
                },
                "minaqual": {
                    "type": "integer",
                    "default": 10,
                    "description": "To specify a threshold for a minimal MAPQ alignment quality",
                    "fa_icon": "fas fa-sliders-h"
                },
                "htseq_params": {
                    "type": "string",
                    "description": "Set of additional parameters for HTSeq",
                    "fa_icon": "fas fa-ellipsis-h"
                }
            },
            "fa_icon": "fas fa-list-alt",
            "description": "General parameters"
        },
        "htseq_features": {
            "title": "HTSeq - features",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "gene_feature_gff_to_quantify_host": {
                    "type": "string",
                    "default": "exon,tRNA",
                    "description": "Host - gene feature to quantify. Should be a comma-separated string.",
                    "fa_icon": "fas fa-sliders-h"
                },
                "host_gff_attribute": {
                    "type": "string",
                    "default": "gene_id",
                    "description": "Host - GFF attribute",
                    "fa_icon": "fas fa-sliders-h"
                },
                "gene_feature_gff_to_quantify_pathogen": {
                    "type": "string",
                    "default": "gene,sRNA,tRNA,rRNA",
                    "description": "Pathogen - gene feature to quantify (will likely need to be modified). Should be a comma-separated string.",
                    "fa_icon": "fas fa-sliders-h"
                },
                "pathogen_gff_attribute": {
                    "type": "string",
                    "default": "locus_tag",
                    "description": "Pathogen - GFF attribute (Will likely need to be modified)",
                    "fa_icon": "fas fa-sliders-h"
                }
            },
            "help_text": "The four parameters below are used to extract gene features from both the host and pathogen. These values may need to be changed, especially for the pathogen, as many different names exist, such as `ID`, `Gene`, `Name`, `locus_tag` etc\n\nA good idea is to view the accompanying annotative file and examine the fields within.\n\nNote: If a host `tRNA.gff` file is included, it is assumed that it has the same gene attribute as the annotative (gff) file, i.e. `gene_id`",
            "fa_icon": "fas fa-list-alt"
        },
        "rna_mapping_statistics": {
            "title": "RNA mapping statistics",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "mapping_statistics": {
                    "type": "boolean",
                    "description": "Option to generate mapping statistics, creating plots and summaries",
                    "fa_icon": "fas fa-running",
                    "help_text": "This will create the following:\n\n - Count the total number of reads before and after trimming\n - Scatterplots comparing all replicates (separate for both host and pathogen reads)\n - Plots of the % of mapped/quantified reads\n - Plots of RNA-class statistics (as many types can be identified, the parameter below `--RNA_classes_to_replace_host` can help to summarise these)"
                },
                "rna_classes_to_replace_host": {
                    "type": "string",
                    "default": "{base_dir}/data/RNA_classes_to_replace.csv",
                    "description": "Tab delimited file contains headers which groups similar types of RNA classes together. This helps to keep the RNA-class names simplified for plotting purposes",
                    "fa_icon": "far fa-file",
                    "help_text": "Initially, the user can run the pipeline without the 'others' class (remove the 'others' column) to identify the concentration of all RNA types,including e.g. scRNAs). Depending on the requirements, the user can decide which types should be included/excluded or grouped together."
                }
            },
            "fa_icon": "fas fa-percent"
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "hidden": true,
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ]
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "hidden": true,
                    "help_text": "This works exactly as with `--email`, except emails are only sent if the workflow is not successful."
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true,
                    "help_text": "Set to receive plain-text e-mails instead of HTML formatted."
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true,
                    "help_text": "If file generated by pipeline exceeds the threshold, it will not be attached."
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true,
                    "help_text": "Set to disable colourful command line output and live life in monochrome."
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "hidden": true,
                    "fa_icon": "fas fa-question-circle"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog",
                    "help_text": "Provide git commit id for custom Institutional configs hosted at `nf-core/configs`. This was implemented for reproducibility purposes. Default: `master`.\n\n```bash\n## Download and use config file with following git commit id\n--custom_config_version d52db660777c4bf36546ddb188ec530c3ada1b96\n```"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell nextflow where to find them with the `custom_config_base` option. For example:\n\n```bash\n## Download and unzip the config files\ncd /path/to/my/configs\nwget https://github.com/nf-core/configs/archive/master.zip\nunzip master.zip\n\n## Run the pipeline\ncd /path/to/my/data\nnextflow run /path/to/pipeline/ --custom_config_base /path/to/my/configs/configs-master/\n```\n\n> Note that the nf-core/tools helper package has a `download` command to download all required pipeline files + singularity containers + institutional configs in one go for you, to make this process easier.",
                    "fa_icon": "fas fa-users-cog"
                },
                "hostnames": {
                    "type": "string",
                    "description": "Institutional configs hostname.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/pipeline_basics"
        },
        {
            "$ref": "#/definitions/pipeline_resources"
        },
        {
            "$ref": "#/definitions/genome_references_and_annotation"
        },
        {
            "$ref": "#/definitions/fastqc"
        },
        {
            "$ref": "#/definitions/cutadapt"
        },
        {
            "$ref": "#/definitions/bbduk"
        },
        {
            "$ref": "#/definitions/salmon_general"
        },
        {
            "$ref": "#/definitions/salmon_selective_alignment"
        },
        {
            "$ref": "#/definitions/salmon_alignment_based_mode"
        },
        {
            "$ref": "#/definitions/star_general"
        },
        {
            "$ref": "#/definitions/star_salmon_alignment_based_mode"
        },
        {
            "$ref": "#/definitions/star_htseq"
        },
        {
            "$ref": "#/definitions/htseq_general"
        },
        {
            "$ref": "#/definitions/htseq_features"
        },
        {
            "$ref": "#/definitions/rna_mapping_statistics"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        }
    ]
}
